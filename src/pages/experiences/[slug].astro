---
import {getExperiences, getProjects} from '../../lib/api';
import {ProjectArticle} from '../../components/projects/ProjectArticle';
import {marked} from "marked";
import {muiRenderer} from "../../lib/marked";
import {ExperienceArticle} from "../../components/experiences/ExperienceArticle";

// This function is required for static site generation with dynamic routes
export async function getStaticPaths() {
    // Fetch all experiences
    const experiences = await getExperiences();

    // Create paths for each project
    const paths = [];

    for (const experience of experiences) {
        // Create both encoded and non-encoded versions of the slug
        const encodedSlug = encodeURIComponent(experience.name);
        const nonEncodedSlug = experience.name;

        // Add path for the encoded slug
        paths.push({
            params: {slug: encodedSlug},
            props: {experience}
        });
    
        // Add path for the non-encoded slug if it's different
        if (encodedSlug !== nonEncodedSlug) {
            paths.push({
                params: {slug: nonEncodedSlug},
                props: {experience}
            });
        }
    }

    return paths;
}

marked.use({
    renderer: muiRenderer
})

// Get the project from props
const {experience} = Astro.props;

// Convert markdown to HTML with MUI classes injected
const markdownContent = experience.details || '';
// Ensure we're passing a string to parse and handle the result properly
const htmlContent = marked.parse(String(markdownContent));
---

<html lang="en">
<head>
    <meta charset="utf-8"/>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg"/>
    <meta name="viewport" content="width=device-width"/>
    <meta name="generator" content={Astro.generator}/>
    <title>{experience.name} - Portfolio</title>
</head>
<body style="margin:0;">
<ExperienceArticle experience={experience}>
    <div set:html={htmlContent}/>
</ExperienceArticle>
</body>
</html>